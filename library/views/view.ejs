<%- include('./partials/layout-start', { title: title }) %>
<%- include('./partials/menu') %>

<h1 class="mb-3">Книга: <%= book.title %></h1>

<div class="card">
  <div class="card-body">
    <p>Автор: <%= book.authors %></p>
    <p>Описание: <%= book.description %></p>
    <p>Понравилась: <%= book.favorite %></p>
    <p>Скачать книгу: <a href="<%= book.fileBook %>">скачать</a></p>
    <div class="text-right">
      <a class="btn btn-sm btn-primary" href="/books/update/<%= book._id %>">
        <i class="fa fa-pencil" aria-hidden="true"></i>
      </a>
      <form action="/books/delete/<%= book._id %>" method="POST" class="d-inline">
        <button class="btn btn-sm btn-danger">
          <i class="fa fa-trash" aria-hidden="true"></i>
        </button>
      </form>
    </div>
  </div>

  <!-- Блок с чатом -->
  <div class="card-body" style="display: flex; flex-direction: column; gap: 30px;">
    <form name="chatMsg" style="display: flex; flex-direction: column; gap: 30px;">
      <input type="text" id="msgInput" name="msg" placeholder="Введите сообщение" style="width: 500px;" />
      <button type="button" id="sendButton" style="width: 150px;">Отправить</button>
    </form>
    <textarea id="textChat" name="textChat" placeholder="Чат" 
      style="width: 90%; height: 150px; resize: none;" readonly></textarea>
  </div>
</div>

<script>
  const bookId = location.pathname.split('/').pop();
  document.addEventListener('DOMContentLoaded', () => {
    const socket = io('/', {query: `roomName=${bookId}`});  // Подключение к серверу
    const sendButton = document.getElementById('sendButton');
    const msgInput = document.getElementById('msgInput');
    const textChat = document.getElementById('textChat');
  })

    // Присоединение к комнате
    socket.emit('joinRoom', bookId);

  // Обработчик отправки сообщения по клику на кнопку
  sendButton.addEventListener('click', () => {
    const message = msgInput.value;
    if (message) {
      // Отправка сообщения на сервер в комнату
      socket.emit('chatMessage', { room: bookId, message });
      msgInput.value = '';  // Очистка поля после отправки
    }
  });

  // Получение и отображение сообщений от других участников
  socket.on('message', (data) => {
    textChat.value += `${data.message}\n`;
  });
</script>

<%- include('./partials/layout-end') %>